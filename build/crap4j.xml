<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2019-06-18 12:47:53</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>63</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>133.01</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>Vanare\BehatCucumberJsonFormatter</package>
      <className>Extension</className>
      <methodName>process</methodName>
      <methodSignature>process(ContainerBuilder $container)</methodSignature>
      <fullMethod>process(ContainerBuilder $container)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Vanare\BehatCucumberJsonFormatter</package>
      <className>Extension</className>
      <methodName>getConfigKey</methodName>
      <methodSignature>getConfigKey()</methodSignature>
      <fullMethod>getConfigKey()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Vanare\BehatCucumberJsonFormatter</package>
      <className>Extension</className>
      <methodName>initialize</methodName>
      <methodSignature>initialize(ExtensionManager $extensionManager)</methodSignature>
      <fullMethod>initialize(ExtensionManager $extensionManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Vanare\BehatCucumberJsonFormatter</package>
      <className>Extension</className>
      <methodName>configure</methodName>
      <methodSignature>configure(ArrayNodeDefinition $builder)</methodSignature>
      <fullMethod>configure(ArrayNodeDefinition $builder)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Vanare\BehatCucumberJsonFormatter</package>
      <className>Extension</className>
      <methodName>load</methodName>
      <methodSignature>load(ContainerBuilder $container, array $config)</methodSignature>
      <fullMethod>load(ContainerBuilder $container, array $config)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($filename, $outputDir)</methodSignature>
      <fullMethod>__construct($filename, $outputDir)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getSubscribedEvents</methodName>
      <methodSignature>getSubscribedEvents()</methodSignature>
      <fullMethod>getSubscribedEvents()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getDescription</methodName>
      <methodSignature>getDescription()</methodSignature>
      <fullMethod>getDescription()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getOutputPrinter</methodName>
      <methodSignature>getOutputPrinter()</methodSignature>
      <fullMethod>getOutputPrinter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>setParameter</methodName>
      <methodSignature>setParameter($name, $value)</methodSignature>
      <fullMethod>setParameter($name, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getParameter</methodName>
      <methodSignature>getParameter($name)</methodSignature>
      <fullMethod>getParameter($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getTimer</methodName>
      <methodSignature>getTimer()</methodSignature>
      <fullMethod>getTimer()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getMemory</methodName>
      <methodSignature>getMemory()</methodSignature>
      <fullMethod>getMemory()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getSuites</methodName>
      <methodSignature>getSuites()</methodSignature>
      <fullMethod>getSuites()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getCurrentSuite</methodName>
      <methodSignature>getCurrentSuite()</methodSignature>
      <fullMethod>getCurrentSuite()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getFeatureCounter</methodName>
      <methodSignature>getFeatureCounter()</methodSignature>
      <fullMethod>getFeatureCounter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getCurrentFeature</methodName>
      <methodSignature>getCurrentFeature()</methodSignature>
      <fullMethod>getCurrentFeature()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getCurrentScenario</methodName>
      <methodSignature>getCurrentScenario()</methodSignature>
      <fullMethod>getCurrentScenario()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>setCurrentScenario</methodName>
      <methodSignature>setCurrentScenario(Node\Scenario $scenario)</methodSignature>
      <fullMethod>setCurrentScenario(Node\Scenario $scenario)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getFailedScenarios</methodName>
      <methodSignature>getFailedScenarios()</methodSignature>
      <fullMethod>getFailedScenarios()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getPassedScenarios</methodName>
      <methodSignature>getPassedScenarios()</methodSignature>
      <fullMethod>getPassedScenarios()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getFailedFeatures</methodName>
      <methodSignature>getFailedFeatures()</methodSignature>
      <fullMethod>getFailedFeatures()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getPassedFeatures</methodName>
      <methodSignature>getPassedFeatures()</methodSignature>
      <fullMethod>getPassedFeatures()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getFailedSteps</methodName>
      <methodSignature>getFailedSteps()</methodSignature>
      <fullMethod>getFailedSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getPassedSteps</methodName>
      <methodSignature>getPassedSteps()</methodSignature>
      <fullMethod>getPassedSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getPendingSteps</methodName>
      <methodSignature>getPendingSteps()</methodSignature>
      <fullMethod>getPendingSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getSkippedSteps</methodName>
      <methodSignature>getSkippedSteps()</methodSignature>
      <fullMethod>getSkippedSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onBeforeExercise</methodName>
      <methodSignature>onBeforeExercise(TestworkEvent\BeforeExerciseCompleted $event)</methodSignature>
      <fullMethod>onBeforeExercise(TestworkEvent\BeforeExerciseCompleted $event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onAfterExercise</methodName>
      <methodSignature>onAfterExercise($event)</methodSignature>
      <fullMethod>onAfterExercise($event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onBeforeSuiteTested</methodName>
      <methodSignature>onBeforeSuiteTested(TestworkEvent\BeforeSuiteTested $event)</methodSignature>
      <fullMethod>onBeforeSuiteTested(TestworkEvent\BeforeSuiteTested $event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onAfterSuiteTested</methodName>
      <methodSignature>onAfterSuiteTested($event)</methodSignature>
      <fullMethod>onAfterSuiteTested($event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onBeforeFeatureTested</methodName>
      <methodSignature>onBeforeFeatureTested(BehatEvent\BeforeFeatureTested $event)</methodSignature>
      <fullMethod>onBeforeFeatureTested(BehatEvent\BeforeFeatureTested $event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onAfterFeatureTested</methodName>
      <methodSignature>onAfterFeatureTested(BehatEvent\AfterFeatureTested $event)</methodSignature>
      <fullMethod>onAfterFeatureTested(BehatEvent\AfterFeatureTested $event)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onBeforeScenarioTested</methodName>
      <methodSignature>onBeforeScenarioTested(BehatEvent\BeforeScenarioTested $event)</methodSignature>
      <fullMethod>onBeforeScenarioTested(BehatEvent\BeforeScenarioTested $event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onAfterScenarioTested</methodName>
      <methodSignature>onAfterScenarioTested(BehatEvent\AfterScenarioTested $event)</methodSignature>
      <fullMethod>onAfterScenarioTested(BehatEvent\AfterScenarioTested $event)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onBeforeOutlineTested</methodName>
      <methodSignature>onBeforeOutlineTested(BehatEvent\BeforeOutlineTested $event)</methodSignature>
      <fullMethod>onBeforeOutlineTested(BehatEvent\BeforeOutlineTested $event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onAfterOutlineTested</methodName>
      <methodSignature>onAfterOutlineTested(BehatEvent\AfterOutlineTested $event)</methodSignature>
      <fullMethod>onAfterOutlineTested(BehatEvent\AfterOutlineTested $event)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onBeforeStepTested</methodName>
      <methodSignature>onBeforeStepTested(BehatEvent\StepTested $event)</methodSignature>
      <fullMethod>onBeforeStepTested(BehatEvent\StepTested $event)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>onAfterStepTested</methodName>
      <methodSignature>onAfterStepTested(BehatEvent\StepTested $event)</methodSignature>
      <fullMethod>onAfterStepTested(BehatEvent\StepTested $event)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Formatter</package>
      <className>Formatter</className>
      <methodName>processStep</methodName>
      <methodSignature>processStep(Node\Step $step, TestResult $result)</methodSignature>
      <fullMethod>processStep(Node\Step $step, TestResult $result)</fullMethod>
      <crap>5.01</crap>
      <complexity>5</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($filename, $path)</methodSignature>
      <fullMethod>__construct($filename, $path)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>setOutputPath</methodName>
      <methodSignature>setOutputPath($path)</methodSignature>
      <fullMethod>setOutputPath($path)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>getOutputPath</methodName>
      <methodSignature>getOutputPath()</methodSignature>
      <fullMethod>getOutputPath()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>setOutputStyles</methodName>
      <methodSignature>setOutputStyles(array $styles)</methodSignature>
      <fullMethod>setOutputStyles(array $styles)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>getOutputStyles</methodName>
      <methodSignature>getOutputStyles()</methodSignature>
      <fullMethod>getOutputStyles()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>setOutputDecorated</methodName>
      <methodSignature>setOutputDecorated($decorated)</methodSignature>
      <fullMethod>setOutputDecorated($decorated)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>isOutputDecorated</methodName>
      <methodSignature>isOutputDecorated()</methodSignature>
      <fullMethod>isOutputDecorated()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>setOutputVerbosity</methodName>
      <methodSignature>setOutputVerbosity($level)</methodSignature>
      <fullMethod>setOutputVerbosity($level)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>getOutputVerbosity</methodName>
      <methodSignature>getOutputVerbosity()</methodSignature>
      <fullMethod>getOutputVerbosity()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>write</methodName>
      <methodSignature>write($messages, $append = false)</methodSignature>
      <fullMethod>write($messages, $append = false)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>writeln</methodName>
      <methodSignature>writeln($messages = '')</methodSignature>
      <fullMethod>writeln($messages = '')</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Printer</package>
      <className>FileOutputPrinter</className>
      <methodName>flush</methodName>
      <methodSignature>flush()</methodSignature>
      <fullMethod>flush()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(FormatterInterface $formatter)</methodSignature>
      <fullMethod>__construct(FormatterInterface $formatter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>render</methodName>
      <methodSignature>render()</methodSignature>
      <fullMethod>render()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>getResult</methodName>
      <methodSignature>getResult($asString = true)</methodSignature>
      <fullMethod>getResult($asString = true)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processSuite</methodName>
      <methodSignature>processSuite(Node\Suite $suite)</methodSignature>
      <fullMethod>processSuite(Node\Suite $suite)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processFeature</methodName>
      <methodSignature>processFeature(Node\Feature $feature)</methodSignature>
      <fullMethod>processFeature(Node\Feature $feature)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processScenario</methodName>
      <methodSignature>processScenario(Node\Scenario $scenario)</methodSignature>
      <fullMethod>processScenario(Node\Scenario $scenario)</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processStep</methodName>
      <methodSignature>processStep(Node\Step $step)</methodSignature>
      <fullMethod>processStep(Node\Step $step)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processExample</methodName>
      <methodSignature>processExample(Node\Example $example)</methodSignature>
      <fullMethod>processExample(Node\Example $example)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processExampleRow</methodName>
      <methodSignature>processExampleRow(Node\ExampleRow $exampleRow)</methodSignature>
      <fullMethod>processExampleRow(Node\ExampleRow $exampleRow)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>FranceMediasMonde\BehatCucumberJsonFormatter\Renderer</package>
      <className>JsonRenderer</className>
      <methodName>processTags</methodName>
      <methodSignature>processTags(array $tags)</methodSignature>
      <fullMethod>processTags(array $tags)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
